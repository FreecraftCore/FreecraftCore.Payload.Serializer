using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;

namespace FreecraftCore.Serializer
{
	//THIS CODE IS FOR AUTO-GENERATED RECORD SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
	/// <summary>
	/// FreecraftCore.Serializer's base-type serializer for AUTO-GENERATED (do not edit) record type serialization
	/// code for the Type: <typeparamref name="T"/>
	/// </summary>
	public abstract class BaseAutoGeneratedRecordSerializerStrategy<TChildType, T> : StatelessTypeSerializerStrategy<TChildType, T>
		where TChildType : StatelessTypeSerializerStrategy<TChildType, T>, new()
		where T : class
	{
		/// <summary>
		/// Auto-generated deserialization/read code.
		/// </summary>
		/// <param name="buffer">The buffer to read from.</param>
		/// <param name="offset">Initial offset into the buffer.</param>
		/// <returns>Deserialized instance of the requested Type.</returns>
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public override T Read(Span<byte> buffer, ref int offset)
		{
			return default;
		}

		/// <summary>
		/// Auto-generated serialization/write code.
		/// </summary>
		/// <param name="value">The value to write.</param>
		/// <param name="buffer">The destination buffer to write to.</param>
		/// <param name="offset">Initial offset into the buffer.</param>
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public override void Write(T value, Span<byte> buffer, ref int offset)
		{
			return;
		}
	}
}
